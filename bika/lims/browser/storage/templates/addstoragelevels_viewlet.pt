<html>
<body>
<style type="text/css">
    .add-storagelevels .discreet{
      font-size:50%;
      color:#ddd;
    }
    .add-storagelevels input{
      margin-bottom:5px;
    }

    /*The collapse-header is positioned upwards, compensate here with margin.
    extra compensation since we only use the one collapsible, and we want to
    position it away from the green-bar. */
    .collapsible {
      margin-top: 2em !important;
    }

    .discreet li {padding:0;margin:0;line-height:1em !important;}

    table {width:100%;}
    td {padding:5px 10px 5px 0;}

    td.bordertop {border-top: 1px solid #ddd;}

    select.storage_types {margin-left:15px;}

</style>

<dl class="collapsible collapsedOnLoad">
    <dt class="collapsibleHeader">
        &nbsp;<img src="++resource++bika.lims.images/add.png">&nbsp;
        <span i18n:translate="">Add new Storage Levels</span>
    </dt>
    <dd class="collapsibleContent">
        <div class="add-storagelevels" style="padding: 10px 0px;">
            <form name="add-storagelevels" action="addstoragelevels_submit" method="POST">
                <table cellspacing="0" cellpadding="0">
                    <tr>
                        <td>Template for new Titles:
                            <div class="discreet">The display titles with {id}
                                included.
                            </div>
                        </td>
                        <td><input name="titletemplate"
                                   class="titletemplate"
                                   placeholder="Title For {id}"
                                   tabindex="1"
                                   tal:attributes="value python: request.get('titletemplate', '')"/>
                        </td>
                        <td>ID Sequence Start:</td>
                        <td>
                            <input name="seq_start"
                                   type="number"
                                   class="seq_start"
                                   tabindex="3"
                                   tal:attributes="value python: request.get('seq_start', '1')"/>
                        </td>
                    <tr>
                    <tr>
                        <td>Template for new IDs:
                            <div class="discreet">IDs should not include spaces
                                or non-ascii characters.
                            </div>
                        </td>
                        <td>
                            <input name="idtemplate"
                                   class="idtemplate"
                                   placeholder="prefix-{id}"
                                   tabindex="2"
                                   tal:attributes="value python: request.get('idtemplate', '')"/>
                        </td>
                        <td>Number of Storage Levels to create
                            <div class="discreet">e.g. Shelves in a freezer, or
                                boxes on a shelf.
                            </div>
                        </td>
                        <td>
                            <input name="storagelevel_count"
                                   type="number"
                                   class="storagelevel_count"
                                   tabindex="4"
                                   tal:attributes="value python: request.get('storagelevel_count', '1')"/>
                        </td>
                    </tr>
                    <tr>
                        <td class="bordertop">Number of Storage Locations in
                            each level:
                            <div class="discreet">Restricts the number of items that can be stored inside each new storage.
                            </div>
                        </td>
                        <td colspan="3" class="bordertop">
                            <input name="storagelocation_count"
                                   type="number"
                                   tabindex="5"
                                   class="storagelocation_count"
                                   tal:attributes="value python: request.get('location_count', '0')"/>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" class="bordertop">Storage types
                            <select id="storage_types" name="storage_types" size="8"
                                    tabindex="6" multiple="multiple">
                                <tal:x tal:repeat="stype view/storage_types">
                                    <option tal:attributes="value python:stype['interface']">
                                        <tal:t tal:replace="python: stype['title']"/>
                                    </option>
                                </tal:x>
                            </select>
                        </td>
                        <td colspan="2" class="bordertop">
                            <div class="discreet">
                                <p>If storage locations are created, select the
                                    types of items that can be stored
                                    there.<br/>
                                    Storage Locations can contain only one item
                                    each.
                                </p>
                                <p>If no storage locations are created, the
                                    newly created storage levels<br/>
                                    will be able to store these items directly.
                                    Storage Levels can contain multiple items.
                                </p>
                            </div>
                        </td>
                    </tr>
                </table>
                <input name="viewlet_submitted"
                       type="submit"
                       class="storagelevels-add"
                       value="Add Storage Levels">
            </form>
        </div>
    </dd>
</dl>

</body>
</html>




